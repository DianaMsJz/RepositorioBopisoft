<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="lbRegresar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAkJJREFUWEft
        l71rFEEYxu8PsFJTi6BgY9TSIjNzp4gKMbuz2ViIWARttBIbBfGjEMSAaGEaG4u0KbI7kwshikQsFGLg
        BA2IYmEQcgQLP+5OknFG33i53Xc3u+PJgviDB47deZ9nbmZ4d7f0HxuY/2gT84JdhAtiZH6ba3D770C8
        YCd15TXqiOfUFataKqIVrWeMi6vsWHUHlP05B9zxLdSRd7V5a13YRmoSJ7y9369uBhs7iCsr+l/XkYCs
        WqI8LINdPogjhrRBI2Joo2/UDX2wzQZzAqYL8yz5RmqVXUnBPp0+X/bogsWIQRckP5jzBDHJ6D27hxt0
        QfowQwwO6Z/Yrgc2Y4UJqgxK9HqKGhUutkFcHOqE15GimEzwxNR7deXWHHo/TaZPQFwcPaAWLYhq4NS0
        elGrK4PNBLTmIa4T1h9sRQZ36PSFJ+rj0tef4QbLCayiDYo5Yi8y+Ldu3JlXzdYKRP9i9MErNXx+NlFH
        T0yhXn3eZC/EttEn9Ag2eG2/bUhaIeaKwxDbJmkCZs8X3nwCy3zkmkDZDfZgg40O+pPoKszMLqr7YwuJ
        OnnuMepHBsRuiG2T5RCOjNZU63v7HHT1EBr0s34OKejQ2YtPVX25YT8B/T4BcXEol5fRooi84Rn18vWy
        3QS4vARxcfK04kPHq2rozEP0XorSW7GBOeEIUtgdcXETYpIp/HFsIJ7cp4u+xE0sxcVn02nBPhuFvpKt
        Ac3pXcQwu7h4i/b9PBT6Wr6ewj5MMAr5NPtHKZV+ABtHjwD6zBbmAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1YBVBtaeZY7WnmWO1YBVBgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANeeZoz616//+tev/9ee
        Z4sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANWjb97mwJrg5sCa4ObAmuDlvZXx6MOc/+jD
        nP/lvZXx5sCa4ObAmuDmwJrg1aNv3gAAAAAAAAAAAAAAAAAAAADYp3W89eDH9f7w3//+8N///vDf//7w
        3//+8N///vDf//7w3//+8N//9d/H9NindbwAAAAAAAAAAAAAAAAAAAAAAAAAANqreqr+8N///vDf//7w
        3//+8N///vDf//7w3//+8N///vDf/9mreakAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADVn2mF/vDf//7w
        3//+8N///vDf//7w3//+8N///vDf//7w3//Vn2mFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1Z9phf7w
        3//+8N///vDf//7w3//+8N///vDf//7w3//+8N//1Z9phQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANWf
        aYX+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf/9WfaYUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADVn2mF/vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//Vn2mFAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA1Z9phf7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N//1Z9phQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAANKeZmf66NT//vDf//7w3//+8N///vDf//7w3//+8N//+efT/9GeY2QAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADMiE0e6s2r6f7w3//+8N///vDf//7w3//+8N///vDf/+rLqejIiVIcAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAANemcpr66NP8/vDf//7w3//+8N///vDf//no0vvXqHKYAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACqqlUD16Z0mOrKpub87dv//O3b/+rKpubYp3WWqqpVAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADKjU867tK09u3Ss/XJi0w5AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANShbILUoGuBAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP5/AAD8PwAAwAMAAMADAADgBwAA4AcAAOAHAADgBwAA4AcAAOAH
        AADwDwAA8A8AAPAPAAD4HwAA/n8AAP5/AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAwoZJFcKGSRUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAxoRMG8yQUtHTm2Dp05tg6cyPUtHEiUUaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADMkFLR8cmd//7ctv/+3Lb/8cic/8yRUc8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAxoRMG9OaYOn+3Lb//ty2//7ctv/+3Lb/05tf6cyFRxkAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyIhI+8uR
        VfHLkVXxy5FV8cuRVfHLkVXxy5FV8cuRVfHLkVTzzJJV/s6VWv/OlVr/zpVa/86VWv/MklX+y5FU88uR
        VfHLkVXxy5FV8cuRVfHLkVXxy5FV8cuRVfHIiEj7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADNllvr/vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w
        3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf/82WW+sAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAMuPUPPx2Lv//vDe//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w
        3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3v/w17r/y49Q8wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAyIdFRsyTV7XWqHTv/e3c//7w3//+8N///vDf//7w3//+8N///vDf//7w
        3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//87dv/2KZy782TWLPIh0VGAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMyQVJHlwJn3/vDf//7w3//+8N///vDf//7w
        3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf/+S/l/fLklSPAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtpJJB82UWer+8N///vDf//7w
        3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N//zpRY6tWA
        VQYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzJBV4v7w
        3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w
        3//MkFXiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADMklXg/vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w
        3//+8N///vDf/8ySVeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAMySVeD+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w
        3//+8N///vDf//7w3//+8N//zJJV4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAzJJV4P7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w
        3//+8N///vDf//7w3//+8N///vDf//7w3//MklXgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMklXg/vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w
        3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf/8ySVeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMySVeD+8N///vDf//7w3//+8N///vDf//7w
        3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N//zJJV4AAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzJJV4P7w3//+8N///vDf//7w
        3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//MklXgAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMklXg/vDf//7w
        3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf/8yS
        VeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMyS
        VeD+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w
        3//+8N//zJJV4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAzJJV4P7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w
        3//+8N///vDf//7w3//MklXgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADMklbZ/OzZ//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w
        3//+8N///vDf//7w3//+8N///OzY/8yRVtgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAM2UV77138b//vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w
        3//+8N///vDf//7w3//+8N///vDf//7w3//03sX/zpVXuwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyY1OcubEnfr+8N///vDf//7w3//+8N///vDf//7w
        3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf/+XCm/nKjU9uAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADFi0YWz5Zd6v7w3v/+8N///vDf//7w
        3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+797/zpZd6syMTRQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADOlFab58Sf+P7w
        3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf/+XDnvnOk1iXAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMyA
        TQrMkVPX8NW2/P7w3//+8N///vDf//7w3//+8N///vDf//7w3//+8N///vDf//7w3//v0rT8zJBT1saO
        VQkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAMWLRhbMkFPX5cKc9/3v3f/+8N///vDf//7w3//+8N///vDf//7w3//9793/5MCZ98yR
        VNXMjE0UAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAANGLRgvLkFKYzpVc6uXEnfn559L//vDf//7w3//559L/5sOd+M6V
        WurKj1OWzIBNCgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADGjkcSyY1LnOnGov7+8N///vDf/+nG
        ov7JjUucxo5HEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADIiUdB2qt57v7w
        3//+8N//2ap57caKST8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADNk1as0p5m6tGcZevMk1eqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADKikoYyopKGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///////D////gf///4H//wAAAP8AAAD/AAAA/4AAAf/AAAP/4A
        AH/+AAB//gAAf/4AAH/+AAB//gAAf/4AAH/+AAB//gAAf/4AAH/+AAB//gAAf/4AAH//AAD//wAA//8A
        AP//gAH//8AD///gB///+B////w////8P///////
</value>
  </data>
</root>